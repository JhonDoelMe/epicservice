from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

def get_admin_panel_kb():
    """–ü–æ–≤–µ—Ä—Ç–∞—î –≥–æ–ª–æ–≤–Ω—É –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –∞–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—ñ."""
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üì• –Ü–º–ø–æ—Ä—Ç —Ç–æ–≤–∞—Ä—ñ–≤ –∑ Excel", callback_data="admin:import_products")],
            [InlineKeyboardButton(text="üìä –í–∏–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑–∞–ª–∏—à–∫–∏", callback_data="admin:export_stock")],
            [InlineKeyboardButton(text="üë• –ê—Ä—Ö—ñ–≤–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤", callback_data="admin:user_archives")]
        ]
    )

def get_users_with_archives_kb(users: list):
    """–°—Ç–≤–æ—Ä—é—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –∑—ñ —Å–ø–∏—Å–∫–æ–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, —è–∫—ñ –º–∞—é—Ç—å –∞—Ä—Ö—ñ–≤–∏."""
    keyboard = []
    for user in users:
        user_id, lists_count = user
        keyboard.append([
            InlineKeyboardButton(text=f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user_id} (—Å–ø–∏—ÅŒ∫—ñ–≤: {lists_count})", callback_data=f"admin:view_user:{user_id}")
        ])
    keyboard.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –¥–æ –∞–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—ñ", callback_data="admin:main")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_archive_kb(user_id: int, is_admin_view: bool = False):
    """–ü–æ–≤–µ—Ä—Ç–∞—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è –º–µ–Ω—é –∞—Ä—Ö—ñ–≤—É."""
    keyboard = [
        [InlineKeyboardButton(text="üì¶ –ó–∞–ø–∞–∫—É–≤–∞—Ç–∏ –≤—Å–µ –≤ ZIP-–∞—Ä—Ö—ñ–≤", callback_data=f"download_zip:{user_id}")]
    ]
    if is_admin_view:
        keyboard.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –¥–æ —Å–ø–∏—Å–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤", callback_data="admin:user_archives")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_search_results_kb(products: list):
    """–°—Ç–≤–æ—Ä—é—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ø–æ—à—É–∫—É, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ ID —Ç–æ–≤–∞—Ä—É."""
    keyboard = []
    for product in products:
        button_text = f"{product.–Ω–∞–∑–≤–∞[:50]}..." if len(product.–Ω–∞–∑–≤–∞) > 50 else product.–Ω–∞–∑–≤–∞
        keyboard.append([
            InlineKeyboardButton(text=button_text, callback_data=f"product:{product.id}")
        ])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_add_to_list_kb(product_id: int):
    """–°—Ç–≤–æ—Ä—é—î –∫–Ω–æ–ø–∫—É '–î–æ–¥–∞—Ç–∏ –¥–æ —Å–ø–∏—Å–∫—É', –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ ID —Ç–æ–≤–∞—Ä—É."""
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üõí –î–æ–¥–∞—Ç–∏ –¥–æ —Å–ø–∏—Å–∫—É", callback_data=f"add_to_list:{product_id}")]
        ]
    )