import logging

from aiogram import F, Router
from aiogram.types import CallbackQuery, Message

from database.orm import orm_get_user_lists_archive
from keyboards.inline import get_archive_kb

router = Router()

@router.message(F.text == "üóÇÔ∏è –ê—Ä—Ö—ñ–≤ —Å–ø–∏—Å–∫—ñ–≤")
async def show_archive_handler(message: Message):
    """–ü–æ–∫–∞–∑—É—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É —Å–ø–∏—Å–æ–∫ –π–æ–≥–æ –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤."""
    user_id = message.from_user.id
    logging.info(f"User {user_id} is viewing their archive.")
    archived_lists = await orm_get_user_lists_archive(user_id)

    if not archived_lists:
        await message.answer("–£ –≤–∞—Å —â–µ –Ω–µ–º–∞—î –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö —Å–ø–∏—Å–∫—ñ–≤.")
        return

    response_text = "üóÇÔ∏è *–í–∞—à –∞—Ä—Ö—ñ–≤ —Å–ø–∏—Å–∫—ñ–≤:*\n\n"
    for i, lst in enumerate(archived_lists, 1):
        created_date = lst.created_at.strftime("%d.%m.%Y –æ %H:%M")
        response_text += f"{i}. `{lst.file_name}` (–≤—ñ–¥ {created_date})\n"

    await message.answer(response_text, reply_markup=get_archive_kb(user_id))