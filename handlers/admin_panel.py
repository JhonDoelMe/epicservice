from aiogram import Router, F, Bot
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from config import ADMIN_IDS
from keyboards.inline import get_admin_panel_kb
from database.orm import orm_smart_import, orm_clear_all_reservations

router = Router()
router.message.filter(F.from_user.id.in_(ADMIN_IDS))

class AdminStates(StatesGroup):
    waiting_for_import_file = State()

@router.message(F.text == "üëë –ê–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å")
async def admin_panel_handler(message: Message):
    await message.answer(
        "–í–∏ –≤ –ø–∞–Ω–µ–ª—ñ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:",
        reply_markup=get_admin_panel_kb()
    )

@router.callback_query(F.data == "admin:import_products")
async def start_import_handler(callback: CallbackQuery, state: FSMContext):
    await callback.message.edit_text("–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –º–µ–Ω—ñ —Ñ–∞–π–ª Excel (`.xlsx`) –∑ —Ç–æ–≤–∞—Ä–∞–º–∏.")
    await state.set_state(AdminStates.waiting_for_import_file)
    await callback.answer()

@router.message(AdminStates.waiting_for_import_file, F.document)
async def process_import_file(message: Message, state: FSMContext, bot: Bot):
    if not message.document.file_name.endswith('.xlsx'):
        await message.answer("–ü–æ–º–∏–ª–∫–∞. –ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —Ñ–∞–π–ª —É —Ñ–æ—Ä–º–∞—Ç—ñ `.xlsx`.")
        return

    await message.answer("–û–±—Ä–æ–±–ª—è—é —Ñ–∞–π–ª... –¶–µ –º–æ–∂–µ –∑–∞–π–Ω—è—Ç–∏ –¥–µ—è–∫–∏–π —á–∞—Å.")
    
    # –û–±–Ω—É–ª—è—î–º–æ –≤—Å—ñ —Ä–µ–∑–µ—Ä–≤–∏ –ø–µ—Ä–µ–¥ —ñ–º–ø–æ—Ä—Ç–æ–º
    await orm_clear_all_reservations()

    file_path = f"temp_{message.document.file_id}.xlsx"
    await bot.download(message.document, destination=file_path)

    result_message = await orm_smart_import(file_path)
    
    await message.answer(result_message)
    await state.clear()
    
    import os
    if os.path.exists(file_path):
        os.remove(file_path)

@router.message(AdminStates.waiting_for_import_file)
async def incorrect_import_file(message: Message):
    await message.answer("–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç (—Ñ–∞–π–ª Excel).")